<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Spam Classifier</title>
    <!-- Use Tailwind CSS for a modern, responsive design -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #e5e7eb; /* Light gray background */
        }

        .spinner-border {
            border-color: currentColor;
            border-right-color: transparent;
        }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        .animate-spin {
            animation: spin 1s linear infinite;
        }
    </style>
</head>
<body class="flex items-center justify-center min-h-screen p-4">

    <!-- Main container -->
    <div class="w-full max-w-xl mx-auto">
        <div class="bg-white rounded-xl shadow-2xl overflow-hidden">
            <!-- Card Header -->
            <div class="bg-gray-800 text-white p-6 md:p-8">
                <h1 class="text-3xl md:text-4xl font-bold text-center">Spam Message Classifier</h1>
                <p class="mt-2 text-gray-300 text-lg text-center">
                    Enter a message below to check if it's spam or not.
                </p>
            </div>

            <!-- Card Body with Form and Result -->
            <div class="p-6 md:p-8">
                <form id="classificationForm" class="space-y-6">
                    <div>
                        <label for="message" class="block text-gray-700 font-semibold mb-2">Your Message:</label>
                        <textarea id="message" name="message" rows="6" placeholder="Type your message here..."
                                  class="w-full p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-colors"
                                  required></textarea>
                    </div>

                    <!-- Button with loading spinner -->
                    <button type="submit" id="classifyBtn"
                            class="w-full bg-gray-800 text-white font-bold py-3 px-6 rounded-lg shadow-lg hover:bg-gray-700 transition-colors focus:outline-none focus:ring-4 focus:ring-gray-500 flex items-center justify-center">
                        <span id="buttonText">Classify Message</span>
                        <div id="loadingSpinner" class="hidden spinner-border text-white ml-2 h-5 w-5 border-2 border-r-transparent rounded-full" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </button>
                </form>

                <!-- Result Display Area -->
                <div id="resultContainer" class="hidden mt-8 p-6 rounded-xl text-center">
                    <h4 class="text-2xl font-bold mb-2" id="resultTitle"></h4>
                    <p class="text-lg" id="resultMessage"></p>
                </div>

                <!-- Error Message Display -->
                <div id="errorMessage" class="hidden mt-8 p-6 rounded-xl text-center bg-red-100 text-red-800 font-semibold">
                    <p>An error occurred. Please try again later.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript to handle AJAX form submission and UI updates -->
    <script>
        document.getElementById('classificationForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent the default form submission (page reload)

            // Get references to DOM elements
            const messageInput = document.getElementById('message');
            const classifyBtn = document.getElementById('classifyBtn');
            const buttonText = document.getElementById('buttonText');
            const loadingSpinner = document.getElementById('loadingSpinner');
            const resultContainer = document.getElementById('resultContainer');
            const resultTitle = document.getElementById('resultTitle');
            const resultMessage = document.getElementById('resultMessage');
            const errorMessage = document.getElementById('errorMessage');

            // Simple client-side validation
            const message = messageInput.value.trim();
            if (!message) {
                // In a real app, you'd show a modal or a styled message instead of an alert
                alert('Please enter a message to classify.');
                return;
            }

            // Hide previous results and errors
            resultContainer.classList.add('hidden');
            errorMessage.classList.add('hidden');

            // Show loading spinner and disable the button
            buttonText.textContent = 'Classifying...';
            classifyBtn.disabled = true;
            loadingSpinner.classList.remove('hidden');

            try {
                // Make the AJAX call to the ASP.NET Core API endpoint
                const response = await fetch('/Spam/ClassifyMessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(message) // Send the message as a JSON string
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();

                // Update the result container based on the prediction
                const prediction = result.prediction;
                resultContainer.classList.remove('hidden', 'bg-red-100', 'text-red-800', 'bg-green-100', 'text-green-800');

                if (prediction === 'spam') {
                    resultTitle.textContent = 'Prediction: SPAM';
                    resultMessage.textContent = 'This message is highly likely to be spam.';
                    resultContainer.classList.add('bg-red-100', 'text-red-800');
                } else {
                    resultTitle.textContent = 'Prediction: HAM';
                    resultMessage.textContent = 'This message is a normal message.';
                    resultContainer.classList.add('bg-green-100', 'text-green-800');
                }

            } catch (error) {
                console.error('An error occurred during classification:', error);
                errorMessage.classList.remove('hidden');
            } finally {
                // Always reset the button and hide the spinner, whether successful or not
                buttonText.textContent = 'Classify Message';
                classifyBtn.disabled = false;
                loadingSpinner.classList.add('hidden');
            }
        });
    </script>

</body>
</html>
